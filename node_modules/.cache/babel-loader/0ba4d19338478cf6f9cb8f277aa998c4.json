{"ast":null,"code":"var _jsxFileName = \"C:\\\\meme\\\\src\\\\components\\\\meme\\\\memegenerator.js\";\nimport React, { Component } from \"react\";\n\nclass Memegenerator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      toptext: \"\",\n      bottomtext: \"\",\n      randomimage: \"http://i.imgflip.com/1bij.jpg\",\n      allMemeImgs: []\n    };\n    this.handle = this.handle.bind(this);\n    this.submit = this.submit.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        memes\n      } = response.data;\n      console.log(memes);\n      this.setState({\n        allMemeImgs: memes\n      });\n    });\n  }\n\n  handle(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  submit(event) {\n    event.preventDefault();\n    const random = Math.floor(Math.random() * this.state.allMemeImgs.length);\n    const randimg = this.state.allMemeImgs[random].url;\n    this.setState({\n      randomimage: randimg\n    });\n  }\n\n  render() {\n    const input_text = {\n      width: \"100%\",\n      padding: \"12px 20px\",\n      margin: \"8px 0\",\n      boxSizing: \"border-box\",\n      border: \"none\",\n      backgroundColor: \"#3CBC8D\",\n      color: \"white\"\n    };\n    const btn_generate = {\n      border: \"none\",\n      color: \"white\",\n      padding: \"15px 32px\",\n      textAlign: \"center\",\n      borderRadius: \"20px 80px\",\n      display: \"inline-block\",\n      fontSize: \"16px\",\n      margin: \"4px 2px\",\n      cursor: \"pointer\",\n      backgroundColor: \"#555555\"\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.submit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: input_text,\n      type: \"text\",\n      name: \"toptext\",\n      placeholder: \"toptext\",\n      value: this.state.toptext,\n      onChange: this.handle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: input_text,\n      type: \"text\",\n      name: \"bottomtext\",\n      placeholder: \"bottomtext\",\n      value: this.state.bottomtext,\n      onChange: this.handle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: btn_generate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, \"generate\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"image\",\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        left: 60\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.randomimage,\n      alt: \"\",\n      width: \"60%\",\n      height: \"50%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        position: \"absolute\",\n        top: 30,\n        left: 50,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"white\",\n        font: \"bold 24px/45px Helvetica, Sans-Serif\",\n        letterSpacing: \"-1px\",\n        background: \"rgba(0, 0, 0, 0.4)\",\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, this.state.toptext)), /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        position: \"absolute\",\n        bottom: 30,\n        left: 50,\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: \"white\",\n        font: \"bold 24px/45px Helvetica, Sans-Serif\",\n        letterSpacing: \"-1px\",\n        background: \"rgba(0, 0, 0, 0.4)\",\n        padding: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, this.state.bottomtext)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Memegenerator;","map":{"version":3,"sources":["C:/meme/src/components/meme/memegenerator.js"],"names":["React","Component","Memegenerator","constructor","state","toptext","bottomtext","randomimage","allMemeImgs","handle","bind","submit","componentDidMount","fetch","then","response","json","memes","data","console","log","setState","event","name","value","target","preventDefault","random","Math","floor","length","randimg","url","render","input_text","width","padding","margin","boxSizing","border","backgroundColor","color","btn_generate","textAlign","borderRadius","display","fontSize","cursor","position","left","top","font","letterSpacing","background","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nclass Memegenerator extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      toptext: \"\",\r\n      bottomtext: \"\",\r\n      randomimage: \"http://i.imgflip.com/1bij.jpg\",\r\n      allMemeImgs: [],\r\n    };\r\n    this.handle = this.handle.bind(this);\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://api.imgflip.com/get_memes\")\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        const { memes } = response.data;\r\n        console.log(memes);\r\n        this.setState({ allMemeImgs: memes });\r\n      });\r\n  }\r\n  handle(event) {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }\r\n  submit(event) {\r\n    event.preventDefault();\r\n    const random = Math.floor(Math.random() * this.state.allMemeImgs.length);\r\n    const randimg = this.state.allMemeImgs[random].url;\r\n    this.setState({ randomimage: randimg });\r\n  }\r\n  render() {\r\n    const input_text = {\r\n      width: \"100%\",\r\n      padding: \"12px 20px\",\r\n      margin: \"8px 0\",\r\n      boxSizing: \"border-box\",\r\n      border: \"none\",\r\n      backgroundColor: \"#3CBC8D\",\r\n      color: \"white\",\r\n    };\r\n    const btn_generate = {\r\n      border: \"none\",\r\n      color: \"white\",\r\n      padding: \"15px 32px\",\r\n      textAlign: \"center\",\r\n      borderRadius: \"20px 80px\",\r\n      display: \"inline-block\",\r\n      fontSize: \"16px\",\r\n      margin: \"4px 2px\",\r\n      cursor: \"pointer\",\r\n      backgroundColor: \"#555555\",\r\n    };\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.submit}>\r\n          <input\r\n            style={input_text}\r\n            type=\"text\"\r\n            name=\"toptext\"\r\n            placeholder=\"toptext\"\r\n            value={this.state.toptext}\r\n            onChange={this.handle}\r\n          />\r\n          <input\r\n            style={input_text}\r\n            type=\"text\"\r\n            name=\"bottomtext\"\r\n            placeholder=\"bottomtext\"\r\n            value={this.state.bottomtext}\r\n            onChange={this.handle}\r\n          />\r\n          <button style={btn_generate}>generate</button>\r\n        </form>\r\n        <div\r\n          className=\"image\"\r\n          style={{\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            left: 60,\r\n          }}\r\n        >\r\n          <img src={this.state.randomimage} alt=\"\" width=\"60%\" height=\"50%\" />\r\n\r\n          <h2\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 30,\r\n              left: 50,\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                color: \"white\",\r\n                font: \"bold 24px/45px Helvetica, Sans-Serif\",\r\n                letterSpacing: \"-1px\",\r\n                background: \"rgba(0, 0, 0, 0.4)\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {this.state.toptext}\r\n            </span>\r\n          </h2>\r\n          <h2\r\n            style={{\r\n              position: \"absolute\",\r\n              bottom: 30,\r\n              left: 50,\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                color: \"white\",\r\n                font: \"bold 24px/45px Helvetica, Sans-Serif\",\r\n                letterSpacing: \"-1px\",\r\n                background: \"rgba(0, 0, 0, 0.4)\",\r\n                padding: \"10px\",\r\n              }}\r\n            >\r\n              {this.state.bottomtext}\r\n            </span>\r\n          </h2>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Memegenerator;\r\n"]},"metadata":{},"sourceType":"module"}